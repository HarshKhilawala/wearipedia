name: build

# TODO: change this to pull_request before release
# see https://securitylab.github.com/research/github-actions-preventing-pwn-requests/
on: 
  push:
  workflow_dispatch:
    inputs:
      git-ref:
        description: Git Ref (Optional)    
        required: false

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.7", "3.8", "3.9"]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
      with:
        ref: "${{ github.event.inputs.git-ref }}"

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4.3.0
      with:
        python-version: ${{ matrix.python-version }}

    - name: check git hash
      run: git rev-parse HEAD

    - name: Test presence of env variables
      run: python3 -c "import os; print([x for x in os.environ if 'W' in x])"
      env:
        WHOOP_4_EMAIL: ${{ secrets.WHOOP_4_EMAIL }}
        WHOOP_4_PASSWORD: ${{ secrets.WHOOP_4_PASSWORD }}

    - name: check which commit this was
      run: git log -1

    - name: Install poetry
      run: make poetry-download

    - name: add poetry to path
      run: export PATH="/Users/runner/.local/bin:$PATH"

    - name: check poetry
      run: poetry --version

    - name: Set up cache
      uses: actions/cache@v3.0.11
      with:
        path: .venv
        key: venv-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('poetry.lock') }}
    - name: Install dependencies
      run: |
        poetry config virtualenvs.in-project true
        poetry install

    - name: Run style checks
      run: |
        make check-codestyle

    - name: Run tests
      run: |
        make test
