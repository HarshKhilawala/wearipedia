name: build

on: 
  push:
  workflow_dispatch:
    inputs:
      git-ref:
        description: Git Ref (Optional)    
        required: false

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.7", "3.8", "3.9"]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
      with:
        ref: "${{ github.event.inputs.git-ref }}"

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4.3.0
      with:
        python-version: ${{ matrix.python-version }}

    - name: clear
      run: export GITHUB_TOKEN=

    - name: cli check
      run: gh auth login --with-token ${GITHUB_TOKEN}
      env:
        GH_TOKEN: ${{ github.token }}

    - name: check that gh cli works
      run: gh secret set test_secret --body "testing"
      env:
        GH_TOKEN: ${{ github.token }}
      #run: gh api --method PUT -H "Accept:\ application/vnd.github+json" /repos/Stanford-Health/wearipedia/actions/secrets/temp_secret -f encrypted_value='c2VjcmV0' -f key_id='012345678912345678'

    - name: Test presence of env variables
      run: python3 -c "import os; print([x for x in os.environ if 'test_s' in x])"
      env:
        WHOOP_4_EMAIL: ${{ secrets.WHOOP_4_EMAIL }}
        WHOOP_4_PASSWORD: ${{ secrets.WHOOP_4_PASSWORD }}

    - name: check git hash
      run: git rev-parse HEAD

    - name: Test presence of env variables
      run: python3 -c "import os; print([x for x in os.environ if 'W' in x])"
      env:
        WHOOP_4_EMAIL: ${{ secrets.WHOOP_4_EMAIL }}
        WHOOP_4_PASSWORD: ${{ secrets.WHOOP_4_PASSWORD }}

    - name: check which commit this was
      run: git log -1

    - name: Install poetry
      run: make poetry-download

    - name: add poetry to path
      run: echo "/Users/runner/.local/bin" >> $GITHUB_PATH

    - name: check path
      run: echo $PATH; echo $GITHUB_PATH

    - name: check poetry
      run: poetry --version

    - name: Set up cache
      uses: actions/cache@v3.0.11
      with:
        path: .venv
        key: venv-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('poetry.lock') }}
    - name: Install dependencies
      run: |
        poetry config virtualenvs.in-project true
        poetry install

    - name: Run style checks
      run: |
        make check-codestyle

    - name: Run tests
      run: |
        make test
